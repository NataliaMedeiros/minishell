https://www.cs.purdue.edu/homes/grr/SystemsProgrammingBook/Book/Chapter5-WritingYourOwnShell.pdf

https://github.com/appinha/42cursus-03-minishell

What our program should have:
- Display a Prompt:
	Your shell should show a prompt (e.g., $ or myshell>) when it is ready to receive a new command from the user.
	This prompt is typically displayed in the terminal window.

- Working History:
	Implement a command history feature, allowing users to navigate through previously entered commands using the up and down arrow keys.

- Search and Launch Executables:
	Your shell should be able to locate and execute programs based on the PATH environment variable.
	It should also handle relative paths (e.g., ./program) and absolute paths (e.g., /usr/bin/program).

- Signal Handling with Minimal Global Variables:
	Handle signals (e.g., SIGINT for Ctrl+C) in a way that does not interfere with your main data structures.
	Use only one global variable to indicate a received signal, ensuring your signal handler does not modify your main data structures directly.

Allowed external functs:
	-> Functions we already used:
		- printf;
		- malloc;
		- open;
		- free;
		- write;
		- read;
		- close;
		- exit;
	-> Functions Duda used on Pipex:
		- fork;
	-> Functions Nat used on minitalk:
		- signal;
		- sigaction;
		- sigemptyset;
		- sigaddset;
		- kill;
	-> New functions:
		- readline;
		- rl_clear_history;
		- rl_on_new_line;
		- rl_replace_line;
		- rl_redisplay;
		- add_history;
		- access;
	Functions I am in doubt
	- wait;
	- waitpid;
	- wait3;
	- wait4;
	- getcwd;
	- chdir;
	- stat;
	- lstat;
	- fstat;
	- unlink;
	- execve;
	- dup;
	- dup2;
	- pipe;
	- opendir;
	- readdir;
	- closedir;
	- strerror;
	- perror;
	- isatty;
	- ttyname;
	- ttyslot;
	- ioctl;
	- getenv;
	- tcsetattr;
	- tcgetattr;
	- tgetent;
	- tgetflag;
	- tgetnum;
	- tgetstr;
	- tgoto;
	- tputs;
